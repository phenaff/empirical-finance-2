tinytex::install_tinytex()
Sys
Sys.getenv("R_PDFVIEWER")
knitr::opts_chunk$set(echo = TRUE)
obj <- function(x) {
sum(diff(x)^2)
}
library(NlcOptim)
Aeq <- matrix(rep(1,3), nrow=1)
Beq <- 1
lb <- rep(0,3)
ub <- rep(1,3)
x.0 <- c(1,0,0)
res <- solnl(X=x.0, objfun=obj, Aeq=Aeq, Beq=Beq, lb=lb, ub=ub)
res
library(NlcOptim)
?solnl
x <- c(2,5,9)
diff(x)
obj
obj(c(3,6,9))
knitr::opts_chunk$set(echo = TRUE)
obj <- function(x) {
sum(diff(x)^2)
}
Aeq <- matrix(rep(1,3), nrow=1)
Beq <- 1
lb <- rep(0,3)
ub <- rep(1,3)
x.0 <- c(1,0,0)
res <- solnl(X=x.0, objfun=obj, Aeq=Aeq, Beq=Beq, lb=lb, ub=ub)
res
res$par
sigma <- c(.1, .2, .3)
rho <- matrix(c(1, .8, .7, .8, 1, .6, .7, .6, 1), nrow=3)
Sigma <- diag(sigma) %*% rho %*% diag(sigma)
Sigma
source('~/dev/TB-GestionPort/Cours/solve_risk_parity.R')
res
Sigma
w <- matrix(c(1,2,3), ncol=1)
w
Sigma %*% w
w * w
w
x <- c(1,2,3)
x
matrix(x, ncol=1)
w <- rep(1/3,3)
w
w <- matrix(w, ncol=1)
Sigma %*%w
Sw <- Sigma %*%w
w * Sw
diff(w * Sw)
sigma <- c(.1, .2, .3)
rho <- matrix(c(1, .8, .7, .8, 1, .6, .7, .6, 1), nrow=3)
Sigma <- diag(sigma) %*% rho %*% diag(sigma)
obj <- function(w) {
w <- matrix(w, ncol=1)
Sw <- Sigma %*% w
ContribRisque <- w * Sw
sum(diff(ContribRisque)^2) * 10^4
}
Aeq <- matrix(rep(1,3), nrow=1)
Beq <- 1
lb <- rep(0,3)
ub <- rep(1,3)
x.0 <- c(1,0,0)
res <- solnl(X=x.0, objfun=obj, Aeq=Aeq, Beq=Beq, lb=lb, ub=ub)
res$par
sigma <- c(.1, .2, .3)
rho <- matrix(c(1, .8, .7, .8, 1, .6, .7, .6, 1), nrow=3)
Sigma <- diag(sigma) %*% rho %*% diag(sigma)
obj <- function(w) {
w <- matrix(w, ncol=1)
Sw <- Sigma %*% w
ContribRisque <- w * Sw
sum(diff(ContribRisque)^2) * 10^4
}
Aeq <- matrix(rep(1,3), nrow=1)
Beq <- 1
lb <- rep(0,3)
ub <- rep(1,3)
x.0 <- c(1,1,1)
res <- solnl(X=x.0, objfun=obj, Aeq=Aeq, Beq=Beq, lb=lb, ub=ub)
res$par
Date(1,1,2021)
Sys.Date()
reticulate::repl_python()
x  = 1
install.packages("reticulate")
reticulate::repl_python()
x  = 1
n
library(reticulate)
install_miniconda(path='/home/phn/Software')
library(reticulate)
help("install_miniconda")
help(install_miniconda)
install_miniconda(path='/home/phn/Software/miniconda3')
help("reticulate")
miniconda_path()
Sys.getenv('HOME')
reticulate::repl_python()
x  = 1
reticulate::repl_python()
x  = 1
x
import os
reticulate::repl_python()
reticulate::repl_python()
knitr::opts_chunk$set(echo = FALSE)
beta.i <- .8
sigma.i <- .25
sigma.M <- .2
sigma.e <- sqrt(sigma.i^2 - beta.i^2 * sigma.M^2)
sigma.e
beta.i <- .8
sigma.i <- .25
sigma.M <- .2
sigma.e <- sqrt(sigma.i^2 - beta.i^2 * sigma.M^2)
sigma.p <- function(n) {
sqrt(sigma.M^2 * beta.i^2 + (1/n)*sigma.e^2)
}
sigma.p(10)
beta.i <- .8
sigma.i <- .25
sigma.M <- .2
sigma.e <- sqrt(sigma.i^2 - beta.i^2 * sigma.M^2)
sigma.p <- function(n) {
sqrt(sigma.M^2 * beta.i^2 + (1/n)*sigma.e^2)
}
sapply(seq(10,100,10), sigma.p)
beta.i <- .8
sigma.i <- .25
sigma.M <- .2
sigma.e <- sqrt(sigma.i^2 - beta.i^2 * sigma.M^2)
sigma.p <- function(n) {
sqrt(sigma.M^2 * beta.i^2 + (1/n)*sigma.e^2)
}
sapply(seq(5,100,5), sigma.p)
sigma.market <- beta.i * sigma.M
beta.i <- .8
sigma.i <- .25
sigma.M <- .2
sigma.e <- sqrt(sigma.i^2 - beta.i^2 * sigma.M^2)
sigma.p <- function(n) {
sqrt(sigma.M^2 * beta.i^2 + (1/n)*sigma.e^2)
}
nb <- seq(5,100,5)
sapply(nb, sigma.p)
sigma.market <- beta.i * sigma.M
beta.i <- .8
sigma.i <- .25
sigma.M <- .2
sigma.e <- sqrt(sigma.i^2 - beta.i^2 * sigma.M^2)
sigma.p <- function(n) {
sqrt(sigma.M^2 * beta.i^2 + (1/n)*sigma.e^2)
}
nb <- seq(5,100,5)
sigma.p <- sapply(nb, sigma.p)
sigma.market <- beta.i * sigma.M
plot(nb, sigma.p)
line(y=sigma.market)
hline(sigma.market)
?hline
beta.i <- .8
sigma.i <- .25
sigma.M <- .2
sigma.e <- sqrt(sigma.i^2 - beta.i^2 * sigma.M^2)
sigma.p <- function(n) {
sqrt(sigma.M^2 * beta.i^2 + (1/n)*sigma.e^2)
}
nb <- seq(2,100,2)
sigma.p <- sapply(nb, sigma.p)
sigma.market <- beta.i * sigma.M
plot(nb, sigma.p)
plot(nb, sigma.p)
?plot
plot(nb, sigma.p, type='l')
beta.i <- .8
sigma.i <- .25
sigma.M <- .2
sigma.e <- sqrt(sigma.i^2 - beta.i^2 * sigma.M^2)
sigma.p <- function(n) {
sqrt(sigma.M^2 * beta.i^2 + (1/n)*sigma.e^2)
}
nb <- seq(2,100,2)
sigma.p <- sapply(nb, sigma.p)
sigma.market <- beta.i * sigma.M
plot(nb, sigma.p)
print(sigma.market)
plot(nb, sigma.p)
X <- matrix(1,1,1/2, -1/2)
X
X <- matrix(c(1,1,1/2, -1/2), nrow=2)
X
R <- c(.4, 0)
res <- solve(X, R)
res
R.B <- c((160-90)/90, (80-90)/90)
res.B <- solve(X, R.B)
res.B
setwd("~/dev/empfin-vip")
bookdown::render_book()
?bookdown::render_book()
bookdown::render_book("Index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
setwd("~/dev/empirical-finance-2")
bookdown::render_book()
bookdown::render_book()
